<script type="text/javascript" src="/javascript/messages.js"></script>

- model_class = Message.new.class

- if params[:query].present?
  %h1
    = "#{t('messages.search_result')}:"

  .well.message
    = t('messages.search_counter', query: params[:query], count: @messages.length)



.well
  %h1
    Messages

  - @messages.each do |message|
    .message
      .head
        = avatar(message.user)
        = render partial: 'mark_as_important', locals: {:message => message}

        %h2
          = link_to message.title, channel_message_path(@current_channel, message)

          %nobr
            = link_to message.user_name, user_path(message.user)
            at
            = l message.created_at, format: :short

      .body
        = message_teaser(message)

        .buttons
          - if can?(:edit, @current_channel) || message.user == current_user
            = link_to edit_channel_message_path(@current_channel, message), class: 'btn btn-mini' do
              %i{:class=>"icon icon-pencil"}


            = link_to channel_message_path(@current_channel, message),
              method: :delete,
              data: {confirm: t('.confirm', default: t("helpers.links.confirm"))},
              class: 'btn btn-mini btn-danger' do

              %i{:class=>"icon icon-trash"}

      .comments
        %a{:href=>"#", :onclick=>"return commentToggle(this);"}
          %span{:class=>"icon-chevron-right"}
            &nbsp
          = message.comments.length
          =t 'comments.plural'

        .commentContainer
          = render partial: 'shared/comments', locals: {comments: message.newest_comments.take(5), message: message}

= will_paginate @messages